package co.bird.android.model;

import kotlin.Metadata;
import kotlin.jvm.internal.Intrinsics;
@Metadata(m28433d1 = {"\u0000\u0014\n\u0002\u0018\u0002\n\u0002\u0010\u0010\n\u0002\b\u0002\n\u0002\u0010\u000e\n\u0002\bU\b\u0086\u0001\u0018\u00002\b\u0012\u0004\u0012\u00020\u00000\u0001B\u0007\b\u0002¢\u0006\u0002\u0010\u0002J\b\u0010\u0003\u001a\u00020\u0004H\u0016j\u0002\b\u0005j\u0002\b\u0006j\u0002\b\u0007j\u0002\b\bj\u0002\b\tj\u0002\b\nj\u0002\b\u000bj\u0002\b\fj\u0002\b\rj\u0002\b\u000ej\u0002\b\u000fj\u0002\b\u0010j\u0002\b\u0011j\u0002\b\u0012j\u0002\b\u0013j\u0002\b\u0014j\u0002\b\u0015j\u0002\b\u0016j\u0002\b\u0017j\u0002\b\u0018j\u0002\b\u0019j\u0002\b\u001aj\u0002\b\u001bj\u0002\b\u001cj\u0002\b\u001dj\u0002\b\u001ej\u0002\b\u001fj\u0002\b j\u0002\b!j\u0002\b\"j\u0002\b#j\u0002\b$j\u0002\b%j\u0002\b&j\u0002\b'j\u0002\b(j\u0002\b)j\u0002\b*j\u0002\b+j\u0002\b,j\u0002\b-j\u0002\b.j\u0002\b/j\u0002\b0j\u0002\b1j\u0002\b2j\u0002\b3j\u0002\b4j\u0002\b5j\u0002\b6j\u0002\b7j\u0002\b8j\u0002\b9j\u0002\b:j\u0002\b;j\u0002\b<j\u0002\b=j\u0002\b>j\u0002\b?j\u0002\b@j\u0002\bAj\u0002\bBj\u0002\bCj\u0002\bDj\u0002\bEj\u0002\bFj\u0002\bGj\u0002\bHj\u0002\bIj\u0002\bJj\u0002\bKj\u0002\bLj\u0002\bMj\u0002\bNj\u0002\bOj\u0002\bPj\u0002\bQj\u0002\bRj\u0002\bSj\u0002\bTj\u0002\bUj\u0002\bVj\u0002\bWj\u0002\bX¨\u0006Y"}, m28432d2 = {"Lco/bird/android/model/LifecycleFlow;", "", "(Ljava/lang/String;I)V", "toString", "", "ADD_BIRD_TO_BATCH", "BIRD_OFFLINE_JOB", "BIRD_WATCHER_REPORT", "BIRD_WATCHER_REPORT_DIRECT", "CHARGER_ISSUE_LOGIC", "CHARGER_TASK_REPORT", "CHARGER_TASK_REPORT_LEGACY", "COMMUNITY_MODE_CHARGER_BOUNTY_MAP_REPORT", "COMMUNITY_MODE_RIDER_MAP_REPORT", "CREATE_BIRD", "DASH_BULK_ACTION", "DASH_BULK_ACTION_FROM_CHARGER_SUPPORT", "DASH_BULK_ACTION_FROM_CITY_TEAM_MEMBER", "DASH_BULK_ACTION_FROM_COMMUNITY_MODE", "DASH_BULK_ACTION_FROM_RIDER_SUPPORT", "DASH_INDIVIDUAL", "DASH_INDIVIDUAL_FROM_CHARGER_SUPPORT", "DASH_INDIVIDUAL_FROM_CITY_TEAM_MEMBER", "DASH_INDIVIDUAL_FROM_COMMUNITY_MODE", "DASH_INDIVIDUAL_FROM_RIDER_SUPPORT", "DISCONNECTED_LIFECYCLE_JOB", "FACILITY_NEST_RELEASE", "FIELD_CENTER", "MARK_ACCIDENT", "MARK_DAMAGED", "MARK_FOUND", "MARK_LOST", "MARK_REPAIRED", "MARK_SLEEP", "PARTNER", "PREDICTIVE_DAMAGE_MODEL", "PROCESS_BIRD_ASLEEP_ON_AWAKE", "PROCESS_BIRD_PRIORITY_COLLECT", "REAL_RIDE_MODEL", "RELEASE_INTO_FACILITY", "RIDE_START", "RIDER_ISSUE_LOGIC", "SCAN", "SCAN_GUN_BATCH_STATUS", "SCAN_GUN_SCAN_IN", "SCAN_GUN_STATUS", "SCAN_GUN_TRANSIT_AND_CAPTIVE", "SCAN_GUN_VALIDATE_RELEASE", "SCAN_INTENTION_DELIVERY_RELEASE", "SCAN_INTENTION_NEST_RELEASE", "SCAN_INTENTION_OPERATOR_ACTION", "SCAN_INTENTION_RIDE", "SCAN_TO_RIDE_MODEL", "SERVICE_CENTER_DEBUG", "SERVICE_CENTER_ENTRY", "SERVICE_CENTER_EXIT", "SERVICE_CENTER_REPAIR_LOG", "SERVICE_PROGRESS", "TASK_COMPLETE", "TASK_COMPLETE_ACCIDENT", "TASK_COMPLETE_BOUNTY", "TASK_COMPLETE_CHARGE", "TASK_COMPLETE_DAMAGED_CHARGE", "TASK_COMPLETE_DAMAGED_TRANSPORT", "TASK_COMPLETE_DISCONNECTED", "TASK_COMPLETE_MARKET_SHIPMENT", "TASK_COMPLETE_OPERATOR_TRANSPORT", "TASK_COMPLETE_REBALANCE", "TASK_COMPLETE_REPAIR", "TASK_COMPLETE_TRANSPORT", "TASK_START", "TASK_START_ACCIDENT", "TASK_START_BOUNTY", "TASK_START_CHARGE", "TASK_START_DAMAGED_CHARGE", "TASK_START_DAMAGED_TRANSPORT", "TASK_START_MARKET_SHIPMENT", "TASK_START_OPERATOR_TRANSPORT", "TASK_START_REBALANCE", "TASK_START_REPAIR", "TASK_START_TRANSPORT", "UPDATE_BIRD_CONNECTIVITY_TO_BLUETOOTH", "UPDATE_BIRD_FROM_BLUETOOTH_TRACE", "UPDATE_BIRD_FROM_TRACK", "ZENDESK", "ZENDESK_FROM_CHARGER_SUPPORT", "ZENDESK_FROM_COMMUNITY_MODE", "ZENDESK_FROM_RIDER_SUPPORT", "OTHER", "model_release"}, m28431k = 1, m28430mv = {1, 8, 0}, m28428xi = 48)
/* loaded from: classes4.dex */
public enum LifecycleFlow {
    ADD_BIRD_TO_BATCH,
    BIRD_OFFLINE_JOB,
    BIRD_WATCHER_REPORT,
    BIRD_WATCHER_REPORT_DIRECT,
    CHARGER_ISSUE_LOGIC,
    CHARGER_TASK_REPORT,
    CHARGER_TASK_REPORT_LEGACY,
    COMMUNITY_MODE_CHARGER_BOUNTY_MAP_REPORT,
    COMMUNITY_MODE_RIDER_MAP_REPORT,
    CREATE_BIRD,
    DASH_BULK_ACTION,
    DASH_BULK_ACTION_FROM_CHARGER_SUPPORT,
    DASH_BULK_ACTION_FROM_CITY_TEAM_MEMBER,
    DASH_BULK_ACTION_FROM_COMMUNITY_MODE,
    DASH_BULK_ACTION_FROM_RIDER_SUPPORT,
    DASH_INDIVIDUAL,
    DASH_INDIVIDUAL_FROM_CHARGER_SUPPORT,
    DASH_INDIVIDUAL_FROM_CITY_TEAM_MEMBER,
    DASH_INDIVIDUAL_FROM_COMMUNITY_MODE,
    DASH_INDIVIDUAL_FROM_RIDER_SUPPORT,
    DISCONNECTED_LIFECYCLE_JOB,
    FACILITY_NEST_RELEASE,
    FIELD_CENTER,
    MARK_ACCIDENT,
    MARK_DAMAGED,
    MARK_FOUND,
    MARK_LOST,
    MARK_REPAIRED,
    MARK_SLEEP,
    PARTNER,
    PREDICTIVE_DAMAGE_MODEL,
    PROCESS_BIRD_ASLEEP_ON_AWAKE,
    PROCESS_BIRD_PRIORITY_COLLECT,
    REAL_RIDE_MODEL,
    RELEASE_INTO_FACILITY,
    RIDE_START,
    RIDER_ISSUE_LOGIC,
    SCAN,
    SCAN_GUN_BATCH_STATUS,
    SCAN_GUN_SCAN_IN,
    SCAN_GUN_STATUS,
    SCAN_GUN_TRANSIT_AND_CAPTIVE,
    SCAN_GUN_VALIDATE_RELEASE,
    SCAN_INTENTION_DELIVERY_RELEASE,
    SCAN_INTENTION_NEST_RELEASE,
    SCAN_INTENTION_OPERATOR_ACTION,
    SCAN_INTENTION_RIDE,
    SCAN_TO_RIDE_MODEL,
    SERVICE_CENTER_DEBUG,
    SERVICE_CENTER_ENTRY,
    SERVICE_CENTER_EXIT,
    SERVICE_CENTER_REPAIR_LOG,
    SERVICE_PROGRESS,
    TASK_COMPLETE,
    TASK_COMPLETE_ACCIDENT,
    TASK_COMPLETE_BOUNTY,
    TASK_COMPLETE_CHARGE,
    TASK_COMPLETE_DAMAGED_CHARGE,
    TASK_COMPLETE_DAMAGED_TRANSPORT,
    TASK_COMPLETE_DISCONNECTED,
    TASK_COMPLETE_MARKET_SHIPMENT,
    TASK_COMPLETE_OPERATOR_TRANSPORT,
    TASK_COMPLETE_REBALANCE,
    TASK_COMPLETE_REPAIR,
    TASK_COMPLETE_TRANSPORT,
    TASK_START,
    TASK_START_ACCIDENT,
    TASK_START_BOUNTY,
    TASK_START_CHARGE,
    TASK_START_DAMAGED_CHARGE,
    TASK_START_DAMAGED_TRANSPORT,
    TASK_START_MARKET_SHIPMENT,
    TASK_START_OPERATOR_TRANSPORT,
    TASK_START_REBALANCE,
    TASK_START_REPAIR,
    TASK_START_TRANSPORT,
    UPDATE_BIRD_CONNECTIVITY_TO_BLUETOOTH,
    UPDATE_BIRD_FROM_BLUETOOTH_TRACE,
    UPDATE_BIRD_FROM_TRACK,
    ZENDESK,
    ZENDESK_FROM_CHARGER_SUPPORT,
    ZENDESK_FROM_COMMUNITY_MODE,
    ZENDESK_FROM_RIDER_SUPPORT,
    OTHER;

    @Override // java.lang.Enum
    public String toString() {
        String lowerCase = name().toLowerCase();
        Intrinsics.checkNotNullExpressionValue(lowerCase, "this as java.lang.String).toLowerCase()");
        return lowerCase;
    }
}
